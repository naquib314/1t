import { EScrollResult, IMixin, IMixinAdapter } from './IMixin';
export interface IPrefetchRendererOptions {
    /**
     * number of rows to prefetch
     * @default 20
     */
    readonly prefetchRows: number;
    /**
     * number of rows extra before cleaning them up
     * @default 10
     */
    readonly cleanUpRows: number;
    /**
     * delay to trigger a prefetch or clean up
     * @default 200ms
     */
    readonly delay: number;
}
/**
 * mixin that prefetches rows depending on the scrolling direction for faster rendering
 */
export default class PrefetchMixin implements IMixin {
    private readonly adapter;
    private prefetchTimeout;
    private cleanupTimeout;
    private readonly options;
    constructor(adapter: IMixinAdapter, options?: Partial<IPrefetchRendererOptions>);
    private prefetchDown;
    private prefetchUp;
    private triggerPrefetch;
    private cleanUpTop;
    private cleanUpBottom;
    private triggerCleanUp;
    onScrolled(isGoingDown: boolean, scrollResult: EScrollResult): void;
}
//# sourceMappingURL=PrefetchMixin.d.ts.map