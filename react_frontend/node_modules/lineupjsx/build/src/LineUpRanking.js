var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { builderAdapter, } from 'lineupjs';
import * as React from 'react';
import { filterChildrenProps } from './utils';
var ALineUpColumnBuilder = /** @class */ (function (_super) {
    __extends(ALineUpColumnBuilder, _super);
    function ALineUpColumnBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ALineUpColumnBuilder;
}(React.PureComponent));
export { ALineUpColumnBuilder };
var LineUpRanking = /** @class */ (function (_super) {
    __extends(LineUpRanking, _super);
    function LineUpRanking() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpRanking.merge = function (props) {
        var inline = filterChildrenProps(props.children, ALineUpColumnBuilder).map(function (c) {
            return c.type.build(c.props);
        });
        var columns = (props.columns || []).concat(inline);
        var r = __assign(__assign({}, props), { columns: columns });
        delete r.children;
        return r;
    };
    /*
     * build the column description
     */
    LineUpRanking.build = function (props, data) {
        return builderAdapter.buildRanking(props, data);
    };
    return LineUpRanking;
}(React.PureComponent));
export default LineUpRanking;
var LineUpColumn = /** @class */ (function (_super) {
    __extends(LineUpColumn, _super);
    function LineUpColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpColumn.build = builderAdapter.buildGeneric;
    return LineUpColumn;
}(ALineUpColumnBuilder));
export { LineUpColumn };
var LineUpImposeColumn = /** @class */ (function (_super) {
    __extends(LineUpImposeColumn, _super);
    function LineUpImposeColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpImposeColumn.build = builderAdapter.buildImposeRanking;
    return LineUpImposeColumn;
}(ALineUpColumnBuilder));
export { LineUpImposeColumn };
var LineUpNestedColumn = /** @class */ (function (_super) {
    __extends(LineUpNestedColumn, _super);
    function LineUpNestedColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpNestedColumn.build = function (props) {
        return builderAdapter.buildNestedRanking(props, filterChildrenProps(props.children, LineUpColumn).map(function (d) { return d.type.build(d.props); }));
    };
    return LineUpNestedColumn;
}(ALineUpColumnBuilder));
export { LineUpNestedColumn };
var LineUpWeightedColumn = /** @class */ (function (_super) {
    __extends(LineUpWeightedColumn, _super);
    function LineUpWeightedColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpWeightedColumn.build = function (props) {
        return props.column;
    };
    Object.defineProperty(LineUpWeightedColumn.prototype, "weight", {
        get: function () {
            return this.props.weight;
        },
        enumerable: false,
        configurable: true
    });
    return LineUpWeightedColumn;
}(ALineUpColumnBuilder));
export { LineUpWeightedColumn };
var LineUpWeightedSumColumn = /** @class */ (function (_super) {
    __extends(LineUpWeightedSumColumn, _super);
    function LineUpWeightedSumColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpWeightedSumColumn.build = function (props) {
        var children = filterChildrenProps(props.children, LineUpWeightedColumn);
        return builderAdapter.buildWeightedSumRanking(props, children.map(function (d) { return ({
            weight: d.props.weight,
            column: d.type.build(d.props),
        }); }));
    };
    return LineUpWeightedSumColumn;
}(ALineUpColumnBuilder));
export { LineUpWeightedSumColumn };
var LineUpReduceColumn = /** @class */ (function (_super) {
    __extends(LineUpReduceColumn, _super);
    function LineUpReduceColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpReduceColumn.build = function (props) {
        return builderAdapter.buildReduceRanking(props, filterChildrenProps(props.children, LineUpColumn).map(function (d) { return d.type.build(d.props); }));
    };
    return LineUpReduceColumn;
}(ALineUpColumnBuilder));
export { LineUpReduceColumn };
var LineUpScriptedColumn = /** @class */ (function (_super) {
    __extends(LineUpScriptedColumn, _super);
    function LineUpScriptedColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpScriptedColumn.build = function (props) {
        return builderAdapter.buildScriptRanking(props, filterChildrenProps(props.children, LineUpColumn).map(function (d) { return d.type.build(d.props); }));
    };
    return LineUpScriptedColumn;
}(ALineUpColumnBuilder));
export { LineUpScriptedColumn };
var LineUpSupportColumn = /** @class */ (function (_super) {
    __extends(LineUpSupportColumn, _super);
    function LineUpSupportColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpSupportColumn.build = builderAdapter.buildSupportRanking;
    return LineUpSupportColumn;
}(ALineUpColumnBuilder));
export { LineUpSupportColumn };
var LineUpAllColumns = /** @class */ (function (_super) {
    __extends(LineUpAllColumns, _super);
    function LineUpAllColumns() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpAllColumns.build = builderAdapter.buildAllColumnsRanking;
    return LineUpAllColumns;
}(ALineUpColumnBuilder));
export { LineUpAllColumns };
//# sourceMappingURL=LineUpRanking.js.map