var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { builderAdapter, } from 'lineupjs';
import * as React from 'react';
var LineUpColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpColumnDesc, _super);
    function LineUpColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpColumnDesc.build = function (props, _data) {
        return builderAdapter.build(props);
    };
    return LineUpColumnDesc;
}(React.PureComponent));
export { LineUpColumnDesc };
var LineUpCategoricalColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpCategoricalColumnDesc, _super);
    function LineUpCategoricalColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpCategoricalColumnDesc.build = function (props, data) {
        return builderAdapter.buildCategorical(props, data);
    };
    return LineUpCategoricalColumnDesc;
}(LineUpColumnDesc));
export { LineUpCategoricalColumnDesc };
var LineUpBooleanColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpBooleanColumnDesc, _super);
    function LineUpBooleanColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpBooleanColumnDesc.build = function (props, _data) {
        return builderAdapter.buildBoolean(props);
    };
    return LineUpBooleanColumnDesc;
}(LineUpColumnDesc));
export { LineUpBooleanColumnDesc };
var LineUpDateColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpDateColumnDesc, _super);
    function LineUpDateColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpDateColumnDesc.build = function (props) {
        return builderAdapter.buildDate(props);
    };
    return LineUpDateColumnDesc;
}(LineUpColumnDesc));
export { LineUpDateColumnDesc };
var LineUpHierarchyColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpHierarchyColumnDesc, _super);
    function LineUpHierarchyColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpHierarchyColumnDesc.build = function (props) {
        return builderAdapter.buildHierarchy(props);
    };
    return LineUpHierarchyColumnDesc;
}(LineUpColumnDesc));
export { LineUpHierarchyColumnDesc };
var LineUpNumberColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpNumberColumnDesc, _super);
    function LineUpNumberColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpNumberColumnDesc.build = function (props, data) {
        return builderAdapter.buildNumber(props, data);
    };
    return LineUpNumberColumnDesc;
}(LineUpColumnDesc));
export { LineUpNumberColumnDesc };
var LineUpStringColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpStringColumnDesc, _super);
    function LineUpStringColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpStringColumnDesc.build = function (props) {
        return builderAdapter.buildString(props);
    };
    return LineUpStringColumnDesc;
}(LineUpColumnDesc));
export { LineUpStringColumnDesc };
var LineUpActionsColumnDesc = /** @class */ (function (_super) {
    __extends(LineUpActionsColumnDesc, _super);
    function LineUpActionsColumnDesc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineUpActionsColumnDesc.build = function (props) {
        return builderAdapter.buildActions(props);
    };
    return LineUpActionsColumnDesc;
}(LineUpColumnDesc));
export { LineUpActionsColumnDesc };
//# sourceMappingURL=column.js.map